!head
  <title>CaesarsCipher</title>
!md
# CaesarsCipher

Caesar's Cipher - also known as the ROT13 Cipher is when
a letter is replaced by the one that is 13 spaces away
from it in the alphabet. If the letter is in the first half
of the alphabet we add 13, if it's in the latter half we
subtract 13 from the character code value.

!tryit

function rot13 (str) {
  const response = []
  const strLength = str.length

  for (let i = 0; i < strLength; i++) {
    const char = str.charCodeAt(i)

    if (char < 65 || (char > 90 && char < 97) || char > 122) {
      response.push(str.charAt(i))
    } else if ((char > 77 && char <= 90) || (char > 109 && char <= 122)) {
      response.push(String.fromCharCode(str.charCodeAt(i) - 13))
    } else {
      response.push(String.fromCharCode(str.charCodeAt(i) + 13))
    }
  }
  return response.join('')
}

!md
Example
Caesars Cipher


!tryit
const encryptedString = 'Uryyb Jbeyq'
const decryptedString = rot13(encryptedString)

console.log(decryptedString) // Hello World


!end
<script>
/*
if(!console.logx) {
  console.logx = console.log;
  console.log = function(...args) {
    let res = args.filter(x=>x).map(x => '<pre>'+escapeHTML(x.toString())+'</pre>').join('&nbsp;');
    $$.HTML(res+'<br>');
  }
}
*/
let cc = $$.codeTransform;
cc.add(cc.comment);
cc.add(cc.class);
cc.add(src => src.replace(/console.log/, '$$$.D'));
cc.add(src => (console.log(src),src)); // display transformed data
</script>
!end
<script>
setNext(["KeyFinder.try","","../index.html"]);
</script>
